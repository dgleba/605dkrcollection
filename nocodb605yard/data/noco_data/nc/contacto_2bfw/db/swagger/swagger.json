{"tags":[{"name":"Procedures","description":""},{"name":"Functions","description":""},{"name":"cities","description":"Everything about your cities"},{"name":"citiesHasManym2mcontacts_cities","description":"Everything about has many relation"},{"name":"contacts","description":"Everything about your contacts"},{"name":"contactsHasManyproblemcategory","description":"Everything about has many relation"},{"name":"note","description":"Everything about your note"},{"name":"noteHasManym2mnote_tag","description":"Everything about has many relation"},{"name":"problemcategory","description":"Everything about your problemcategory"},{"name":"problemcategoryBelongsTocontacts","description":"Everything about belongs to relation"},{"name":"project21","description":"Everything about your project21"},{"name":"project21HasManym2mproject21_proj_update_21","description":"Everything about has many relation"},{"name":"proj_update_21","description":"Everything about your proj_update_21"},{"name":"proj_update_21HasManym2mproject21_proj_update_21","description":"Everything about has many relation"},{"name":"tag","description":"Everything about your tag"},{"name":"tagHasManym2mnote_tag","description":"Everything about has many relation"},{"name":"m2mcontacts_cities","description":"Everything about your m2mcontacts_cities"},{"name":"m2mcontacts_citiesBelongsTocities","description":"Everything about belongs to relation"},{"name":"m2mcontacts_tag","description":"Everything about your m2mcontacts_tag"},{"name":"m2mcontacts_tagBelongsTotag","description":"Everything about belongs to relation"},{"name":"m2mnote_tag","description":"Everything about your m2mnote_tag"},{"name":"m2mnote_tagBelongsTotag","description":"Everything about belongs to relation"},{"name":"m2mproject21_proj_update_21","description":"Everything about your m2mproject21_proj_update_21"},{"name":"m2mproject21_proj_update_21BelongsToproj_update_21","description":"Everything about belongs to relation"}],"paths":{"/nc/contacto_2bfw/api/v1/cities":{"post":{"tags":["cities"],"summary":"Add a new cities","description":"","operationId":"addcities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"cities object that needs to add","required":true,"schema":{"$ref":"#/definitions/cities"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["cities"],"summary":"Get list","description":"","operationId":"getcities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/citiesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}":{"get":{"tags":["cities"],"summary":"Find cities by ID","description":"Returns a single cities","operationId":"getcitiesById","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/citiesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"cities not found"}}},"put":{"tags":["cities"],"summary":"Updates a cities","description":"","operationId":"updatecities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"cities object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/cities"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["cities"],"summary":"Deletes a cities","description":"","operationId":"deletecities","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"cities not found"}}}},"/nc/contacto_2bfw/api/v1/cities/bulk":{"post":{"tags":["cities"],"summary":"Bulk cities insert","description":"","operationId":"bulkcitiesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"cities objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/cities"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["cities"],"summary":"Updates a cities","description":"","operationId":"updatecities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"cities objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/cities"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["cities"],"summary":"Deletes a cities","description":"","operationId":"deletecities","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"cities objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/cities"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"cities not found"}}}},"/nc/contacto_2bfw/api/v1/cities/findOne":{"get":{"tags":["cities"],"summary":"Get first one from filtered data","description":"","operationId":"findOnecities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/exists":{"get":{"tags":["cities"],"summary":"Check cities with provided ID exists","description":"Returns a single cities","operationId":"checkcitiesExists","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/cities/count":{"get":{"tags":["cities"],"summary":"Get cities count","operationId":"getcitiesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/groupby":{"get":{"tags":["cities"],"summary":"Group by column","description":"","operationId":"citiesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/distribution":{"get":{"tags":["cities"],"summary":"","description":"","operationId":"citiesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/distinct":{"get":{"tags":["cities"],"summary":"Get first one from filtered data","description":"","operationId":"citiesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/aggregate":{"get":{"tags":["cities"],"summary":"Get first one from filtered data","description":"","operationId":"citiesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/cities/has/m2mcontacts_cities":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Get cities list with m2mcontacts_cities children","description":"","operationId":"citiesHasManym2mcontacts_citiesList","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/m2mcontacts_cities":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Find m2mcontacts_cities list by parent cities id","description":"Returns a single cities","operationId":"getm2mcontacts_citiesBycitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of cities to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"cities not found"}}},"post":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Insert m2mcontacts_cities under a parent cities","description":"Returns a single cities","operationId":"insertm2mcontacts_citiesBycitiesId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities object to insert","required":true,"schema":{"type":"object"}},{"name":"citiesId","in":"path","description":"ID of cities to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/m2mcontacts_cities/{m2mcontacts_citiesId}":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Get by m2mcontacts_cities id parent cities id","description":"Returns a single cities","operationId":"getm2mcontacts_citiesByIdAndcitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of parent cities","required":true,"type":"integer","format":"int64"},{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Delete by m2mcontacts_cities id parent cities id","description":"Returns a single cities","operationId":"deletem2mcontacts_citiesByIdAndcitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of parent cities","required":true,"type":"integer","format":"int64"},{"name":"m2mcontacts_citiesId","in":"path","description":"ID of cm2mcontacts_cities","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Update m2mcontacts_cities under a parent cities","description":"Returns a single cities","operationId":"updatem2mcontacts_citiesByIdAndcitiesId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities object to insert","required":true,"schema":{"type":"object"}},{"name":"citiesId","in":"path","description":"ID of cities to return","required":true,"type":"integer","format":"int64"},{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/m2mcontacts_cities/{m2mcontacts_citiesId}/exists":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Check row exists by m2mcontacts_cities id and parent cities id","description":"","operationId":"existsm2mcontacts_citiesByIdAndcitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of parent cities","required":true,"type":"integer","format":"int64"},{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/m2mcontacts_cities/findOne":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Find one m2mcontacts_cities by parent cities id and filters","description":"","operationId":"findOnem2mcontacts_citiesBycitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of parent cities","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/cities/{citiesId}/m2mcontacts_cities/count":{"get":{"tags":["citiesHasManym2mcontacts_cities"],"summary":"Get m2mcontacts_cities count by parent id and filter","description":"","operationId":"getCountWithincitiesId","produces":["application/json"],"parameters":[{"name":"citiesId","in":"path","description":"ID of parent cities","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/contacts":{"post":{"tags":["contacts"],"summary":"Add a new contacts","description":"","operationId":"addcontacts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"contacts object that needs to add","required":true,"schema":{"$ref":"#/definitions/contacts"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["contacts"],"summary":"Get list","description":"","operationId":"getcontacts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/contactsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}":{"get":{"tags":["contacts"],"summary":"Find contacts by ID","description":"Returns a single contacts","operationId":"getcontactsById","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of contacts to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/contactsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"contacts not found"}}},"put":{"tags":["contacts"],"summary":"Updates a contacts","description":"","operationId":"updatecontacts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of contacts to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"contacts object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/contacts"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["contacts"],"summary":"Deletes a contacts","description":"","operationId":"deletecontacts","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of contacts to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"contacts not found"}}}},"/nc/contacto_2bfw/api/v1/contacts/bulk":{"post":{"tags":["contacts"],"summary":"Bulk contacts insert","description":"","operationId":"bulkcontactsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"contacts objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/contacts"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["contacts"],"summary":"Updates a contacts","description":"","operationId":"updatecontacts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"contacts objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/contacts"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["contacts"],"summary":"Deletes a contacts","description":"","operationId":"deletecontacts","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"contacts objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/contacts"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"contacts not found"}}}},"/nc/contacto_2bfw/api/v1/contacts/findOne":{"get":{"tags":["contacts"],"summary":"Get first one from filtered data","description":"","operationId":"findOnecontacts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/contacts"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/exists":{"get":{"tags":["contacts"],"summary":"Check contacts with provided ID exists","description":"Returns a single contacts","operationId":"checkcontactsExists","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of contacts to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/contacts/count":{"get":{"tags":["contacts"],"summary":"Get contacts count","operationId":"getcontactsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/groupby":{"get":{"tags":["contacts"],"summary":"Group by column","description":"","operationId":"contactsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/contacts"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/distribution":{"get":{"tags":["contacts"],"summary":"","description":"","operationId":"contactsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/distinct":{"get":{"tags":["contacts"],"summary":"Get first one from filtered data","description":"","operationId":"contactsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/aggregate":{"get":{"tags":["contacts"],"summary":"Get first one from filtered data","description":"","operationId":"contactsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/contacts"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/contacts/has/problemcategory":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Get contacts list with problemcategory children","description":"","operationId":"contactsHasManyproblemcategoryList","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/problemcategory":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Find problemcategory list by parent contacts id","description":"Returns a single contacts","operationId":"getproblemcategoryBycontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of contacts to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"contacts not found"}}},"post":{"tags":["contactsHasManyproblemcategory"],"summary":"Insert problemcategory under a parent contacts","description":"Returns a single contacts","operationId":"insertproblemcategoryBycontactsId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory object to insert","required":true,"schema":{"type":"object"}},{"name":"contactsId","in":"path","description":"ID of contacts to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/problemcategory/{problemcategoryId}":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Get by problemcategory id parent contacts id","description":"Returns a single contacts","operationId":"getproblemcategoryByIdAndcontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of parent contacts","required":true,"type":"integer","format":"int64"},{"name":"problemcategoryId","in":"path","description":"ID of problemcategory","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["contactsHasManyproblemcategory"],"summary":"Delete by problemcategory id parent contacts id","description":"Returns a single contacts","operationId":"deleteproblemcategoryByIdAndcontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of parent contacts","required":true,"type":"integer","format":"int64"},{"name":"problemcategoryId","in":"path","description":"ID of cproblemcategory","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["contactsHasManyproblemcategory"],"summary":"Update problemcategory under a parent contacts","description":"Returns a single contacts","operationId":"updateproblemcategoryByIdAndcontactsId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory object to insert","required":true,"schema":{"type":"object"}},{"name":"contactsId","in":"path","description":"ID of contacts to return","required":true,"type":"integer","format":"int64"},{"name":"problemcategoryId","in":"path","description":"ID of problemcategory","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/problemcategory/{problemcategoryId}/exists":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Check row exists by problemcategory id and parent contacts id","description":"","operationId":"existsproblemcategoryByIdAndcontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of parent contacts","required":true,"type":"integer","format":"int64"},{"name":"problemcategoryId","in":"path","description":"ID of problemcategory","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/problemcategory/findOne":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Find one problemcategory by parent contacts id and filters","description":"","operationId":"findOneproblemcategoryBycontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of parent contacts","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/contacts/{contactsId}/problemcategory/count":{"get":{"tags":["contactsHasManyproblemcategory"],"summary":"Get problemcategory count by parent id and filter","description":"","operationId":"getCountWithincontactsId","produces":["application/json"],"parameters":[{"name":"contactsId","in":"path","description":"ID of parent contacts","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/note":{"post":{"tags":["note"],"summary":"Add a new note","description":"","operationId":"addnote","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"note object that needs to add","required":true,"schema":{"$ref":"#/definitions/note"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["note"],"summary":"Get list","description":"","operationId":"getnote","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/noteNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}":{"get":{"tags":["note"],"summary":"Find note by ID","description":"Returns a single note","operationId":"getnoteById","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of note to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/noteNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"note not found"}}},"put":{"tags":["note"],"summary":"Updates a note","description":"","operationId":"updatenote","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of note to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"note object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/note"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["note"],"summary":"Deletes a note","description":"","operationId":"deletenote","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of note to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"note not found"}}}},"/nc/contacto_2bfw/api/v1/note/bulk":{"post":{"tags":["note"],"summary":"Bulk note insert","description":"","operationId":"bulknoteInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"note objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/note"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["note"],"summary":"Updates a note","description":"","operationId":"updatenote","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"note objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/note"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["note"],"summary":"Deletes a note","description":"","operationId":"deletenote","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"note objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/note"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"note not found"}}}},"/nc/contacto_2bfw/api/v1/note/findOne":{"get":{"tags":["note"],"summary":"Get first one from filtered data","description":"","operationId":"findOnenote","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/note"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/exists":{"get":{"tags":["note"],"summary":"Check note with provided ID exists","description":"Returns a single note","operationId":"checknoteExists","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of note to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/note/count":{"get":{"tags":["note"],"summary":"Get note count","operationId":"getnoteCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/groupby":{"get":{"tags":["note"],"summary":"Group by column","description":"","operationId":"noteGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/note"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/distribution":{"get":{"tags":["note"],"summary":"","description":"","operationId":"noteDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/distinct":{"get":{"tags":["note"],"summary":"Get first one from filtered data","description":"","operationId":"noteDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/aggregate":{"get":{"tags":["note"],"summary":"Get first one from filtered data","description":"","operationId":"noteAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/note"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/note/has/m2mnote_tag":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Get note list with m2mnote_tag children","description":"","operationId":"noteHasManym2mnote_tagList","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/m2mnote_tag":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Find m2mnote_tag list by parent note id","description":"Returns a single note","operationId":"getm2mnote_tagBynoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of note to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"note not found"}}},"post":{"tags":["noteHasManym2mnote_tag"],"summary":"Insert m2mnote_tag under a parent note","description":"Returns a single note","operationId":"insertm2mnote_tagBynoteId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag object to insert","required":true,"schema":{"type":"object"}},{"name":"noteId","in":"path","description":"ID of note to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/m2mnote_tag/{m2mnote_tagId}":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Get by m2mnote_tag id parent note id","description":"Returns a single note","operationId":"getm2mnote_tagByIdAndnoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of parent note","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["noteHasManym2mnote_tag"],"summary":"Delete by m2mnote_tag id parent note id","description":"Returns a single note","operationId":"deletem2mnote_tagByIdAndnoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of parent note","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of cm2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["noteHasManym2mnote_tag"],"summary":"Update m2mnote_tag under a parent note","description":"Returns a single note","operationId":"updatem2mnote_tagByIdAndnoteId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag object to insert","required":true,"schema":{"type":"object"}},{"name":"noteId","in":"path","description":"ID of note to return","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/m2mnote_tag/{m2mnote_tagId}/exists":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Check row exists by m2mnote_tag id and parent note id","description":"","operationId":"existsm2mnote_tagByIdAndnoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of parent note","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/m2mnote_tag/findOne":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Find one m2mnote_tag by parent note id and filters","description":"","operationId":"findOnem2mnote_tagBynoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of parent note","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/note/{noteId}/m2mnote_tag/count":{"get":{"tags":["noteHasManym2mnote_tag"],"summary":"Get m2mnote_tag count by parent id and filter","description":"","operationId":"getCountWithinnoteId","produces":["application/json"],"parameters":[{"name":"noteId","in":"path","description":"ID of parent note","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/problemcategory":{"post":{"tags":["problemcategory"],"summary":"Add a new problemcategory","description":"","operationId":"addproblemcategory","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory object that needs to add","required":true,"schema":{"$ref":"#/definitions/problemcategory"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["problemcategory"],"summary":"Get list","description":"","operationId":"getproblemcategory","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/problemcategoryNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/{problemcategoryId}":{"get":{"tags":["problemcategory"],"summary":"Find problemcategory by ID","description":"Returns a single problemcategory","operationId":"getproblemcategoryById","produces":["application/json"],"parameters":[{"name":"problemcategoryId","in":"path","description":"ID of problemcategory to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/problemcategoryNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"problemcategory not found"}}},"put":{"tags":["problemcategory"],"summary":"Updates a problemcategory","description":"","operationId":"updateproblemcategory","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"problemcategoryId","in":"path","description":"ID of problemcategory to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"problemcategory object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/problemcategory"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["problemcategory"],"summary":"Deletes a problemcategory","description":"","operationId":"deleteproblemcategory","produces":["application/json"],"parameters":[{"name":"problemcategoryId","in":"path","description":"ID of problemcategory to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"problemcategory not found"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/bulk":{"post":{"tags":["problemcategory"],"summary":"Bulk problemcategory insert","description":"","operationId":"bulkproblemcategoryInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/problemcategory"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["problemcategory"],"summary":"Updates a problemcategory","description":"","operationId":"updateproblemcategory","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/problemcategory"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["problemcategory"],"summary":"Deletes a problemcategory","description":"","operationId":"deleteproblemcategory","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"problemcategory objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/problemcategory"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"problemcategory not found"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/findOne":{"get":{"tags":["problemcategory"],"summary":"Get first one from filtered data","description":"","operationId":"findOneproblemcategory","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/problemcategory"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/{problemcategoryId}/exists":{"get":{"tags":["problemcategory"],"summary":"Check problemcategory with provided ID exists","description":"Returns a single problemcategory","operationId":"checkproblemcategoryExists","produces":["application/json"],"parameters":[{"name":"problemcategoryId","in":"path","description":"ID of problemcategory to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/problemcategory/count":{"get":{"tags":["problemcategory"],"summary":"Get problemcategory count","operationId":"getproblemcategoryCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/groupby":{"get":{"tags":["problemcategory"],"summary":"Group by column","description":"","operationId":"problemcategoryGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/problemcategory"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/distribution":{"get":{"tags":["problemcategory"],"summary":"","description":"","operationId":"problemcategoryDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/distinct":{"get":{"tags":["problemcategory"],"summary":"Get first one from filtered data","description":"","operationId":"problemcategoryDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/aggregate":{"get":{"tags":["problemcategory"],"summary":"Get first one from filtered data","description":"","operationId":"problemcategoryAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/problemcategory"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/problemcategory/belongs/contacts":{"get":{"tags":["problemcategoryBelongsTocontacts"],"summary":"Get problemcategory list with contacts parent","description":"","operationId":"problemcategoryWithParent","produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/project21":{"post":{"tags":["project21"],"summary":"Add a new project21","description":"","operationId":"addproject21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"project21 object that needs to add","required":true,"schema":{"$ref":"#/definitions/project21"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["project21"],"summary":"Get list","description":"","operationId":"getproject21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/project21Nested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}":{"get":{"tags":["project21"],"summary":"Find project21 by ID","description":"Returns a single project21","operationId":"getproject21ById","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of project21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/project21Nested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"project21 not found"}}},"put":{"tags":["project21"],"summary":"Updates a project21","description":"","operationId":"updateproject21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of project21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"project21 object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/project21"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["project21"],"summary":"Deletes a project21","description":"","operationId":"deleteproject21","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of project21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"project21 not found"}}}},"/nc/contacto_2bfw/api/v1/project21/bulk":{"post":{"tags":["project21"],"summary":"Bulk project21 insert","description":"","operationId":"bulkproject21Insert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"project21 objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/project21"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["project21"],"summary":"Updates a project21","description":"","operationId":"updateproject21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"project21 objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/project21"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["project21"],"summary":"Deletes a project21","description":"","operationId":"deleteproject21","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"project21 objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/project21"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"project21 not found"}}}},"/nc/contacto_2bfw/api/v1/project21/findOne":{"get":{"tags":["project21"],"summary":"Get first one from filtered data","description":"","operationId":"findOneproject21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/project21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/exists":{"get":{"tags":["project21"],"summary":"Check project21 with provided ID exists","description":"Returns a single project21","operationId":"checkproject21Exists","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of project21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/project21/count":{"get":{"tags":["project21"],"summary":"Get project21 count","operationId":"getproject21Count","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/groupby":{"get":{"tags":["project21"],"summary":"Group by column","description":"","operationId":"project21GroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/project21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/distribution":{"get":{"tags":["project21"],"summary":"","description":"","operationId":"project21Distribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/distinct":{"get":{"tags":["project21"],"summary":"Get first one from filtered data","description":"","operationId":"project21Distinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/aggregate":{"get":{"tags":["project21"],"summary":"Get first one from filtered data","description":"","operationId":"project21Aggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/project21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/project21/has/m2mproject21_proj_update_21":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Get project21 list with m2mproject21_proj_update_21 children","description":"","operationId":"project21HasManym2mproject21_proj_update_21List","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/m2mproject21_proj_update_21":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Find m2mproject21_proj_update_21 list by parent project21 id","description":"Returns a single project21","operationId":"getm2mproject21_proj_update_21Byproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of project21 to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"project21 not found"}}},"post":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Insert m2mproject21_proj_update_21 under a parent project21","description":"Returns a single project21","operationId":"insertm2mproject21_proj_update_21Byproject21Id","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object to insert","required":true,"schema":{"type":"object"}},{"name":"project21Id","in":"path","description":"ID of project21 to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Get by m2mproject21_proj_update_21 id parent project21 id","description":"Returns a single project21","operationId":"getm2mproject21_proj_update_21ByIdAndproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of parent project21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Delete by m2mproject21_proj_update_21 id parent project21 id","description":"Returns a single project21","operationId":"deletem2mproject21_proj_update_21ByIdAndproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of parent project21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of cm2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Update m2mproject21_proj_update_21 under a parent project21","description":"Returns a single project21","operationId":"updatem2mproject21_proj_update_21ByIdAndproject21Id","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object to insert","required":true,"schema":{"type":"object"}},{"name":"project21Id","in":"path","description":"ID of project21 to return","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}/exists":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Check row exists by m2mproject21_proj_update_21 id and parent project21 id","description":"","operationId":"existsm2mproject21_proj_update_21ByIdAndproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of parent project21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/m2mproject21_proj_update_21/findOne":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Find one m2mproject21_proj_update_21 by parent project21 id and filters","description":"","operationId":"findOnem2mproject21_proj_update_21Byproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of parent project21","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/project21/{project21Id}/m2mproject21_proj_update_21/count":{"get":{"tags":["project21HasManym2mproject21_proj_update_21"],"summary":"Get m2mproject21_proj_update_21 count by parent id and filter","description":"","operationId":"getCountWithinproject21Id","produces":["application/json"],"parameters":[{"name":"project21Id","in":"path","description":"ID of parent project21","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21":{"post":{"tags":["proj_update_21"],"summary":"Add a new proj_update_21","description":"","operationId":"addproj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"proj_update_21 object that needs to add","required":true,"schema":{"$ref":"#/definitions/proj_update_21"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["proj_update_21"],"summary":"Get list","description":"","operationId":"getproj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/proj_update_21Nested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}":{"get":{"tags":["proj_update_21"],"summary":"Find proj_update_21 by ID","description":"Returns a single proj_update_21","operationId":"getproj_update_21ById","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/proj_update_21Nested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"proj_update_21 not found"}}},"put":{"tags":["proj_update_21"],"summary":"Updates a proj_update_21","description":"","operationId":"updateproj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"proj_update_21 object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/proj_update_21"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["proj_update_21"],"summary":"Deletes a proj_update_21","description":"","operationId":"deleteproj_update_21","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"proj_update_21 not found"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/bulk":{"post":{"tags":["proj_update_21"],"summary":"Bulk proj_update_21 insert","description":"","operationId":"bulkproj_update_21Insert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"proj_update_21 objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/proj_update_21"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["proj_update_21"],"summary":"Updates a proj_update_21","description":"","operationId":"updateproj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"proj_update_21 objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/proj_update_21"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["proj_update_21"],"summary":"Deletes a proj_update_21","description":"","operationId":"deleteproj_update_21","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"proj_update_21 objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/proj_update_21"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"proj_update_21 not found"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/findOne":{"get":{"tags":["proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"findOneproj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/exists":{"get":{"tags":["proj_update_21"],"summary":"Check proj_update_21 with provided ID exists","description":"Returns a single proj_update_21","operationId":"checkproj_update_21Exists","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/count":{"get":{"tags":["proj_update_21"],"summary":"Get proj_update_21 count","operationId":"getproj_update_21Count","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/groupby":{"get":{"tags":["proj_update_21"],"summary":"Group by column","description":"","operationId":"proj_update_21GroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/distribution":{"get":{"tags":["proj_update_21"],"summary":"","description":"","operationId":"proj_update_21Distribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/distinct":{"get":{"tags":["proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"proj_update_21Distinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/aggregate":{"get":{"tags":["proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"proj_update_21Aggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/has/m2mproject21_proj_update_21":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Get proj_update_21 list with m2mproject21_proj_update_21 children","description":"","operationId":"proj_update_21HasManym2mproject21_proj_update_21List","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/m2mproject21_proj_update_21":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Find m2mproject21_proj_update_21 list by parent proj_update_21 id","description":"Returns a single proj_update_21","operationId":"getm2mproject21_proj_update_21Byproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"proj_update_21 not found"}}},"post":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Insert m2mproject21_proj_update_21 under a parent proj_update_21","description":"Returns a single proj_update_21","operationId":"insertm2mproject21_proj_update_21Byproj_update_21Id","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object to insert","required":true,"schema":{"type":"object"}},{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Get by m2mproject21_proj_update_21 id parent proj_update_21 id","description":"Returns a single proj_update_21","operationId":"getm2mproject21_proj_update_21ByIdAndproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of parent proj_update_21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Delete by m2mproject21_proj_update_21 id parent proj_update_21 id","description":"Returns a single proj_update_21","operationId":"deletem2mproject21_proj_update_21ByIdAndproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of parent proj_update_21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of cm2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Update m2mproject21_proj_update_21 under a parent proj_update_21","description":"Returns a single proj_update_21","operationId":"updatem2mproject21_proj_update_21ByIdAndproj_update_21Id","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object to insert","required":true,"schema":{"type":"object"}},{"name":"proj_update_21Id","in":"path","description":"ID of proj_update_21 to return","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}/exists":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Check row exists by m2mproject21_proj_update_21 id and parent proj_update_21 id","description":"","operationId":"existsm2mproject21_proj_update_21ByIdAndproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of parent proj_update_21","required":true,"type":"integer","format":"int64"},{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/m2mproject21_proj_update_21/findOne":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Find one m2mproject21_proj_update_21 by parent proj_update_21 id and filters","description":"","operationId":"findOnem2mproject21_proj_update_21Byproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of parent proj_update_21","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/proj_update_21/{proj_update_21Id}/m2mproject21_proj_update_21/count":{"get":{"tags":["proj_update_21HasManym2mproject21_proj_update_21"],"summary":"Get m2mproject21_proj_update_21 count by parent id and filter","description":"","operationId":"getCountWithinproj_update_21Id","produces":["application/json"],"parameters":[{"name":"proj_update_21Id","in":"path","description":"ID of parent proj_update_21","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/tag":{"post":{"tags":["tag"],"summary":"Add a new tag","description":"","operationId":"addtag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"tag object that needs to add","required":true,"schema":{"$ref":"#/definitions/tag"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["tag"],"summary":"Get list","description":"","operationId":"gettag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/tagNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}":{"get":{"tags":["tag"],"summary":"Find tag by ID","description":"Returns a single tag","operationId":"gettagById","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/tagNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"tag not found"}}},"put":{"tags":["tag"],"summary":"Updates a tag","description":"","operationId":"updatetag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"tag object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/tag"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["tag"],"summary":"Deletes a tag","description":"","operationId":"deletetag","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"tag not found"}}}},"/nc/contacto_2bfw/api/v1/tag/bulk":{"post":{"tags":["tag"],"summary":"Bulk tag insert","description":"","operationId":"bulktagInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"tag objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["tag"],"summary":"Updates a tag","description":"","operationId":"updatetag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"tag objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["tag"],"summary":"Deletes a tag","description":"","operationId":"deletetag","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"tag objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/tag"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"tag not found"}}}},"/nc/contacto_2bfw/api/v1/tag/findOne":{"get":{"tags":["tag"],"summary":"Get first one from filtered data","description":"","operationId":"findOnetag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/exists":{"get":{"tags":["tag"],"summary":"Check tag with provided ID exists","description":"Returns a single tag","operationId":"checktagExists","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/tag/count":{"get":{"tags":["tag"],"summary":"Get tag count","operationId":"gettagCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/groupby":{"get":{"tags":["tag"],"summary":"Group by column","description":"","operationId":"tagGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/distribution":{"get":{"tags":["tag"],"summary":"","description":"","operationId":"tagDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/distinct":{"get":{"tags":["tag"],"summary":"Get first one from filtered data","description":"","operationId":"tagDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/aggregate":{"get":{"tags":["tag"],"summary":"Get first one from filtered data","description":"","operationId":"tagAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/tag/has/m2mnote_tag":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Get tag list with m2mnote_tag children","description":"","operationId":"tagHasManym2mnote_tagList","produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/m2mnote_tag":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Find m2mnote_tag list by parent tag id","description":"Returns a single tag","operationId":"getm2mnote_tagBytagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of tag to return","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"tag not found"}}},"post":{"tags":["tagHasManym2mnote_tag"],"summary":"Insert m2mnote_tag under a parent tag","description":"Returns a single tag","operationId":"insertm2mnote_tagBytagId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag object to insert","required":true,"schema":{"type":"object"}},{"name":"tagId","in":"path","description":"ID of tag to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/m2mnote_tag/{m2mnote_tagId}":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Get by m2mnote_tag id parent tag id","description":"Returns a single tag","operationId":"getm2mnote_tagByIdAndtagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of parent tag","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":"object"}}}},"delete":{"tags":["tagHasManym2mnote_tag"],"summary":"Delete by m2mnote_tag id parent tag id","description":"Returns a single tag","operationId":"deletem2mnote_tagByIdAndtagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of parent tag","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of cm2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation"}}},"put":{"tags":["tagHasManym2mnote_tag"],"summary":"Update m2mnote_tag under a parent tag","description":"Returns a single tag","operationId":"updatem2mnote_tagByIdAndtagId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag object to insert","required":true,"schema":{"type":"object"}},{"name":"tagId","in":"path","description":"ID of tag to return","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/m2mnote_tag/{m2mnote_tagId}/exists":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Check row exists by m2mnote_tag id and parent tag id","description":"","operationId":"existsm2mnote_tagByIdAndtagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of parent tag","required":true,"type":"integer","format":"int64"},{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/m2mnote_tag/findOne":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Find one m2mnote_tag by parent tag id and filters","description":"","operationId":"findOnem2mnote_tagBytagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of parent tag","required":true,"type":"integer","format":"int64"},{"in":"query","name":"fields","type":"String","description":"Comma separated fields of model"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/tag/{tagId}/m2mnote_tag/count":{"get":{"tags":["tagHasManym2mnote_tag"],"summary":"Get m2mnote_tag count by parent id and filter","description":"","operationId":"getCountWithintagId","produces":["application/json"],"parameters":[{"name":"tagId","in":"path","description":"ID of parent tag","required":true,"type":"integer","format":"int64"},{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities":{"post":{"tags":["m2mcontacts_cities"],"summary":"Add a new m2mcontacts_cities","description":"","operationId":"addm2mcontacts_cities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities object that needs to add","required":true,"schema":{"$ref":"#/definitions/m2mcontacts_cities"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["m2mcontacts_cities"],"summary":"Get list","description":"","operationId":"getm2mcontacts_cities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_citiesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/{m2mcontacts_citiesId}":{"get":{"tags":["m2mcontacts_cities"],"summary":"Find m2mcontacts_cities by ID","description":"Returns a single m2mcontacts_cities","operationId":"getm2mcontacts_citiesById","produces":["application/json"],"parameters":[{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_citiesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_cities not found"}}},"put":{"tags":["m2mcontacts_cities"],"summary":"Updates a m2mcontacts_cities","description":"","operationId":"updatem2mcontacts_cities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"m2mcontacts_cities object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/m2mcontacts_cities"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mcontacts_cities"],"summary":"Deletes a m2mcontacts_cities","description":"","operationId":"deletem2mcontacts_cities","produces":["application/json"],"parameters":[{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_cities not found"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/bulk":{"post":{"tags":["m2mcontacts_cities"],"summary":"Bulk m2mcontacts_cities insert","description":"","operationId":"bulkm2mcontacts_citiesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_cities"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["m2mcontacts_cities"],"summary":"Updates a m2mcontacts_cities","description":"","operationId":"updatem2mcontacts_cities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_cities"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mcontacts_cities"],"summary":"Deletes a m2mcontacts_cities","description":"","operationId":"deletem2mcontacts_cities","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_cities objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_cities"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_cities not found"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/findOne":{"get":{"tags":["m2mcontacts_cities"],"summary":"Get first one from filtered data","description":"","operationId":"findOnem2mcontacts_cities","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/{m2mcontacts_citiesId}/exists":{"get":{"tags":["m2mcontacts_cities"],"summary":"Check m2mcontacts_cities with provided ID exists","description":"Returns a single m2mcontacts_cities","operationId":"checkm2mcontacts_citiesExists","produces":["application/json"],"parameters":[{"name":"m2mcontacts_citiesId","in":"path","description":"ID of m2mcontacts_cities to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/count":{"get":{"tags":["m2mcontacts_cities"],"summary":"Get m2mcontacts_cities count","operationId":"getm2mcontacts_citiesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/groupby":{"get":{"tags":["m2mcontacts_cities"],"summary":"Group by column","description":"","operationId":"m2mcontacts_citiesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/distribution":{"get":{"tags":["m2mcontacts_cities"],"summary":"","description":"","operationId":"m2mcontacts_citiesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/distinct":{"get":{"tags":["m2mcontacts_cities"],"summary":"Get first one from filtered data","description":"","operationId":"m2mcontacts_citiesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/aggregate":{"get":{"tags":["m2mcontacts_cities"],"summary":"Get first one from filtered data","description":"","operationId":"m2mcontacts_citiesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_cities"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_cities/belongs/cities":{"get":{"tags":["m2mcontacts_citiesBelongsTocities"],"summary":"Get m2mcontacts_cities list with cities parent","description":"","operationId":"m2mcontacts_citiesWithParent","produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag":{"post":{"tags":["m2mcontacts_tag"],"summary":"Add a new m2mcontacts_tag","description":"","operationId":"addm2mcontacts_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_tag object that needs to add","required":true,"schema":{"$ref":"#/definitions/m2mcontacts_tag"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["m2mcontacts_tag"],"summary":"Get list","description":"","operationId":"getm2mcontacts_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_tagNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/{m2mcontacts_tagId}":{"get":{"tags":["m2mcontacts_tag"],"summary":"Find m2mcontacts_tag by ID","description":"Returns a single m2mcontacts_tag","operationId":"getm2mcontacts_tagById","produces":["application/json"],"parameters":[{"name":"m2mcontacts_tagId","in":"path","description":"ID of m2mcontacts_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_tagNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_tag not found"}}},"put":{"tags":["m2mcontacts_tag"],"summary":"Updates a m2mcontacts_tag","description":"","operationId":"updatem2mcontacts_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"m2mcontacts_tagId","in":"path","description":"ID of m2mcontacts_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"m2mcontacts_tag object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/m2mcontacts_tag"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mcontacts_tag"],"summary":"Deletes a m2mcontacts_tag","description":"","operationId":"deletem2mcontacts_tag","produces":["application/json"],"parameters":[{"name":"m2mcontacts_tagId","in":"path","description":"ID of m2mcontacts_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_tag not found"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/bulk":{"post":{"tags":["m2mcontacts_tag"],"summary":"Bulk m2mcontacts_tag insert","description":"","operationId":"bulkm2mcontacts_tagInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_tag objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["m2mcontacts_tag"],"summary":"Updates a m2mcontacts_tag","description":"","operationId":"updatem2mcontacts_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_tag objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mcontacts_tag"],"summary":"Deletes a m2mcontacts_tag","description":"","operationId":"deletem2mcontacts_tag","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mcontacts_tag objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mcontacts_tag"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mcontacts_tag not found"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/findOne":{"get":{"tags":["m2mcontacts_tag"],"summary":"Get first one from filtered data","description":"","operationId":"findOnem2mcontacts_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/{m2mcontacts_tagId}/exists":{"get":{"tags":["m2mcontacts_tag"],"summary":"Check m2mcontacts_tag with provided ID exists","description":"Returns a single m2mcontacts_tag","operationId":"checkm2mcontacts_tagExists","produces":["application/json"],"parameters":[{"name":"m2mcontacts_tagId","in":"path","description":"ID of m2mcontacts_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/count":{"get":{"tags":["m2mcontacts_tag"],"summary":"Get m2mcontacts_tag count","operationId":"getm2mcontacts_tagCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/groupby":{"get":{"tags":["m2mcontacts_tag"],"summary":"Group by column","description":"","operationId":"m2mcontacts_tagGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/distribution":{"get":{"tags":["m2mcontacts_tag"],"summary":"","description":"","operationId":"m2mcontacts_tagDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/distinct":{"get":{"tags":["m2mcontacts_tag"],"summary":"Get first one from filtered data","description":"","operationId":"m2mcontacts_tagDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/aggregate":{"get":{"tags":["m2mcontacts_tag"],"summary":"Get first one from filtered data","description":"","operationId":"m2mcontacts_tagAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mcontacts_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mcontacts_tag/belongs/tag":{"get":{"tags":["m2mcontacts_tagBelongsTotag"],"summary":"Get m2mcontacts_tag list with tag parent","description":"","operationId":"m2mcontacts_tagWithParent","produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag":{"post":{"tags":["m2mnote_tag"],"summary":"Add a new m2mnote_tag","description":"","operationId":"addm2mnote_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag object that needs to add","required":true,"schema":{"$ref":"#/definitions/m2mnote_tag"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["m2mnote_tag"],"summary":"Get list","description":"","operationId":"getm2mnote_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/m2mnote_tagNested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/{m2mnote_tagId}":{"get":{"tags":["m2mnote_tag"],"summary":"Find m2mnote_tag by ID","description":"Returns a single m2mnote_tag","operationId":"getm2mnote_tagById","produces":["application/json"],"parameters":[{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mnote_tagNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mnote_tag not found"}}},"put":{"tags":["m2mnote_tag"],"summary":"Updates a m2mnote_tag","description":"","operationId":"updatem2mnote_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"m2mnote_tag object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/m2mnote_tag"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mnote_tag"],"summary":"Deletes a m2mnote_tag","description":"","operationId":"deletem2mnote_tag","produces":["application/json"],"parameters":[{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mnote_tag not found"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/bulk":{"post":{"tags":["m2mnote_tag"],"summary":"Bulk m2mnote_tag insert","description":"","operationId":"bulkm2mnote_tagInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mnote_tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["m2mnote_tag"],"summary":"Updates a m2mnote_tag","description":"","operationId":"updatem2mnote_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mnote_tag"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mnote_tag"],"summary":"Deletes a m2mnote_tag","description":"","operationId":"deletem2mnote_tag","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mnote_tag objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mnote_tag"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mnote_tag not found"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/findOne":{"get":{"tags":["m2mnote_tag"],"summary":"Get first one from filtered data","description":"","operationId":"findOnem2mnote_tag","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mnote_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/{m2mnote_tagId}/exists":{"get":{"tags":["m2mnote_tag"],"summary":"Check m2mnote_tag with provided ID exists","description":"Returns a single m2mnote_tag","operationId":"checkm2mnote_tagExists","produces":["application/json"],"parameters":[{"name":"m2mnote_tagId","in":"path","description":"ID of m2mnote_tag to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/count":{"get":{"tags":["m2mnote_tag"],"summary":"Get m2mnote_tag count","operationId":"getm2mnote_tagCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/groupby":{"get":{"tags":["m2mnote_tag"],"summary":"Group by column","description":"","operationId":"m2mnote_tagGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mnote_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/distribution":{"get":{"tags":["m2mnote_tag"],"summary":"","description":"","operationId":"m2mnote_tagDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/distinct":{"get":{"tags":["m2mnote_tag"],"summary":"Get first one from filtered data","description":"","operationId":"m2mnote_tagDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/aggregate":{"get":{"tags":["m2mnote_tag"],"summary":"Get first one from filtered data","description":"","operationId":"m2mnote_tagAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mnote_tag"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mnote_tag/belongs/tag":{"get":{"tags":["m2mnote_tagBelongsTotag"],"summary":"Get m2mnote_tag list with tag parent","description":"","operationId":"m2mnote_tagWithParent","produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21":{"post":{"tags":["m2mproject21_proj_update_21"],"summary":"Add a new m2mproject21_proj_update_21","description":"","operationId":"addm2mproject21_proj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object that needs to add","required":true,"schema":{"$ref":"#/definitions/m2mproject21_proj_update_21"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Get list","description":"","operationId":"getm2mproject21_proj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/m2mproject21_proj_update_21Nested"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Find m2mproject21_proj_update_21 by ID","description":"Returns a single m2mproject21_proj_update_21","operationId":"getm2mproject21_proj_update_21ById","produces":["application/json"],"parameters":[{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mproject21_proj_update_21Nested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mproject21_proj_update_21 not found"}}},"put":{"tags":["m2mproject21_proj_update_21"],"summary":"Updates a m2mproject21_proj_update_21","description":"","operationId":"updatem2mproject21_proj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"m2mproject21_proj_update_21 object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/m2mproject21_proj_update_21"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mproject21_proj_update_21"],"summary":"Deletes a m2mproject21_proj_update_21","description":"","operationId":"deletem2mproject21_proj_update_21","produces":["application/json"],"parameters":[{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mproject21_proj_update_21 not found"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/bulk":{"post":{"tags":["m2mproject21_proj_update_21"],"summary":"Bulk m2mproject21_proj_update_21 insert","description":"","operationId":"bulkm2mproject21_proj_update_21Insert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mproject21_proj_update_21"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["m2mproject21_proj_update_21"],"summary":"Updates a m2mproject21_proj_update_21","description":"","operationId":"updatem2mproject21_proj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mproject21_proj_update_21"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["m2mproject21_proj_update_21"],"summary":"Deletes a m2mproject21_proj_update_21","description":"","operationId":"deletem2mproject21_proj_update_21","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"m2mproject21_proj_update_21 objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/m2mproject21_proj_update_21"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"m2mproject21_proj_update_21 not found"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/findOne":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"findOnem2mproject21_proj_update_21","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mproject21_proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/{m2mproject21_proj_update_21Id}/exists":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Check m2mproject21_proj_update_21 with provided ID exists","description":"Returns a single m2mproject21_proj_update_21","operationId":"checkm2mproject21_proj_update_21Exists","produces":["application/json"],"parameters":[{"name":"m2mproject21_proj_update_21Id","in":"path","description":"ID of m2mproject21_proj_update_21 to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/count":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Get m2mproject21_proj_update_21 count","operationId":"getm2mproject21_proj_update_21Count","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/groupby":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Group by column","description":"","operationId":"m2mproject21_proj_update_21GroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mproject21_proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/distribution":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"","description":"","operationId":"m2mproject21_proj_update_21Distribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/distinct":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"m2mproject21_proj_update_21Distinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/aggregate":{"get":{"tags":["m2mproject21_proj_update_21"],"summary":"Get first one from filtered data","description":"","operationId":"m2mproject21_proj_update_21Aggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/m2mproject21_proj_update_21"}},"405":{"description":"Invalid input"}}}},"/nc/contacto_2bfw/api/v1/m2mproject21_proj_update_21/belongs/proj_update_21":{"get":{"tags":["m2mproject21_proj_update_21BelongsToproj_update_21"],"summary":"Get m2mproject21_proj_update_21 list with proj_update_21 parent","description":"","operationId":"m2mproject21_proj_update_21WithParent","produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"String","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Sort parameter","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}}}}}},"definitions":{"cities":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"Number":{}}},"citiesNested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"Number":{}}},"contacts":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"phone":{},"name":{},"picture":{},"country":{},"eml":{}}},"contactsNested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"phone":{},"name":{},"picture":{},"country":{},"eml":{}}},"note":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"body":{}}},"noteNested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"body":{},"tagMMList":{"readOnly":true,"type":"array","items":{"$ref":"#/definitions/tag"}}}},"problemcategory":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{}}},"problemcategoryNested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{}}},"project21":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"update":{}}},"project21Nested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"update":{},"proj_update_21MMList":{"readOnly":true,"type":"array","items":{"$ref":"#/definitions/proj_update_21"}}}},"proj_update_21":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{}}},"proj_update_21Nested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"project21MMList":{"readOnly":true,"type":"array","items":{"$ref":"#/definitions/project21"}}}},"tag":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{}}},"tagNested":{"type":"object","properties":{"id":{"nullable":false,"readOnly":true},"title":{},"created_at":{},"updated_at":{},"contactsMMList":{"readOnly":true,"type":"array","items":{"$ref":"#/definitions/contacts"}},"noteMMList":{"readOnly":true,"type":"array","items":{"$ref":"#/definitions/note"}}}},"m2mcontacts_cities":{"type":"object","properties":{"citiesCId":{"nullable":false},"contactsPId":{"nullable":false}}},"m2mcontacts_citiesNested":{"type":"object","properties":{"citiesCId":{"nullable":false},"contactsPId":{"nullable":false},"contactsRead":{"readOnly":true,"$ref":"#/definitions/contacts"},"citiesRead":{"readOnly":true,"$ref":"#/definitions/cities"}}},"m2mcontacts_tag":{"type":"object","properties":{"tagCId":{"nullable":false},"contactsPId":{"nullable":false}}},"m2mcontacts_tagNested":{"type":"object","properties":{"tagCId":{"nullable":false},"contactsPId":{"nullable":false},"contactsRead":{"readOnly":true,"$ref":"#/definitions/contacts"},"tagRead":{"readOnly":true,"$ref":"#/definitions/tag"}}},"m2mnote_tag":{"type":"object","properties":{"tagCId":{"nullable":false},"notePId":{"nullable":false}}},"m2mnote_tagNested":{"type":"object","properties":{"tagCId":{"nullable":false},"notePId":{"nullable":false},"noteRead":{"readOnly":true,"$ref":"#/definitions/note"},"tagRead":{"readOnly":true,"$ref":"#/definitions/tag"}}},"m2mproject21_proj_update_21":{"type":"object","properties":{"proj_update_21CId":{"nullable":false},"project21PId":{"nullable":false}}},"m2mproject21_proj_update_21Nested":{"type":"object","properties":{"proj_update_21CId":{"nullable":false},"project21PId":{"nullable":false},"project21Read":{"readOnly":true,"$ref":"#/definitions/project21"},"proj_update_21Read":{"readOnly":true,"$ref":"#/definitions/proj_update_21"}}}}}